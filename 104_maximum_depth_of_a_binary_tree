//104. Maximum Depth of Binary Tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    
    int bestDepth = 1;
    public void maxDepth(TreeNode root, int currentDepth){

        

        if(currentDepth > bestDepth){
                bestDepth = currentDepth;
            }

        if(root.left != null){
            TreeNode rootCheck = root.left;
            maxDepth(rootCheck, currentDepth + 1);
        }

        if(root.right != null){
            TreeNode rootCheck = root.right;
            maxDepth(rootCheck, currentDepth + 1);
        }
    }



    public int maxDepth(TreeNode root) {
        if(root == null){
            return 0;
        }
        maxDepth(root, 1);
        return bestDepth;
    }

    
}
