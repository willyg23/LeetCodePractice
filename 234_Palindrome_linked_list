/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
       


        List<Integer> list1 = new ArrayList<>() ;
        List<Integer> list2 = new ArrayList<>() ;

        while(head != null){
            list1.add(head.val);
            head = head.next;
        }

        for(int i = list1.size() - 1; i > - 1; i--){
            list2.add(list1.get(i));
        }


        
        for(int i = 0; i < list1.size(); i++){
            if(list2.get(i) != list1.get(i)){
                return false;
            }
        }


        return true;


    }
}
